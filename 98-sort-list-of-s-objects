public List<Account> getAccounts(List<Account> accounts) {
    // code here
    accounts.sort();
    return accounts;
}
// write extra class here 
public class AccountWrapper implements Comparable {
    public Account a;

    public AccountWrapper(Account acc){
        
        a = acc;
    }
    public Integer compareTo(Object compareTo){
        AccountWrapper compareToAcc = (AccountWrapper)compareTo;
        Integer returnValue = 0;
        if ((a.AnnualRevenue == null) && (compareToAcc.a.AnnualRevenue == null)) {
            // both wrappers have null Amounts
            returnValue = 0;
        } else if ((a.AnnualRevenue == null) && (compareToAcc.a.AnnualRevenue != null)){
            // nulls-first implementation
            returnValue = -1;
        } else if ((a.AnnualRevenue != null) && (compareToAcc.a.AnnualRevenue == null)){
            // nulls-first implementation
            returnValue = 1;
        } else if (a.AnnualRevenue > compareToAcc.a.AnnualRevenue) {
            // Set return value to a positive value.
            returnValue = 1;
        } else if (a.AnnualRevenue < compareToAcc.a.AnnualRevenue) {
            // Set return value to a negative value.
            returnValue = -1;
        } 
        return returnValue;
    }
}
